3+4
3+6
pkgs <- c(
"h2o",        # High performance machine learning
"lime",       # Explaining black-box models
"recipes",    # Creating ML preprocessing recipes
"tidyverse",  # Set of pkgs for data science: dplyr, ggplot2, purrr, tidyr, ...
"tidyquant",  # Financial time series pkg - Used for theme_tq ggplot2 theme
"glue",       # Pasting text
"cowplot",    # Handling multiple ggplots
"GGally",     # Data understanding - visualizations
"skimr",      # Data understanding - summary information
"fs",         # Working with the file system - directory structure
"readxl",     # Reading excel files
"writexl"     # Writing to excel files
)
install.packages(pkgs)
install.packages("recipes")
library(recipes)
library(h20)
library(lime)
library(tidyverse)
library(skimr)
install.packages("skimr")
library(skimr)
setwd("~/GTD/Accounts/Midmark/01_SterilizerAssessment")
library(readxl)
train_raw_tbl <- read_excel(path_data, sheet = 1)
path_data <- "00_data/Sterilizer 2017-Feb 2020.xlsx"
train_raw_tbl <- read_excel(path_data, sheet = 1)
View(train_raw_tbl)
train_raw_tbl
data_raw_tbl <- read_excel(path_data, sheet = 1)
glimpse(data_raw_tbl)
library(GGally)
install.packages("GGally")
library(GGally)
glimpse(data_raw_tbl)
?glimpse
library(tidyverse)
glimpse(data_raw_tbl)
skim(data_raw_tbl)
skim(data_raw_tbl)
skim(data_raw_tbl)
glimpse(data_raw_tbl)
skim(data_raw_tbl)
data_raw_tbl %>%
select_if(is.character) %>%
glimpse()
data_raw_tbl %>%
select_if(is.character) %>%
map(unique)
skim(data_raw_tbl)
skim(data_raw_tbl)
data_raw_tbl %>%
select_if(is.character) %>%
map(unique)
glimpse(data_raw_tbl)
data_raw_tbl %>%
select_if(is.character) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select_if(is.character) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select(`Incident Item`) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select(`Incident Item Description`) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select(`Incident Item Description`) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select(`Incident Item`) %>%
map(~ table(.) %>% prop.table())
source('~/.active-rstudio-document')
data_raw_tbl %>%
select(`Incident Item Description`) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select(`Incident Item`) %>%
map(~ table(.) %>% prop.table())
data_raw_tbl %>%
select_if(is.character) %>%
glimpse()
data_raw_tbl %>%
select_if(is.numeric) %>%
map(~ unique(.) %>% length())
data_raw_tbl %>%
select_if(is.numeric) %>%
map_df(~ unique(.) %>% length()) %>%
gather() %>%
arrange(value) %>%
filter(value <= 10)
data_raw_tbl %>%
select_if(is.numeric) %>%
map_df(~ unique(.) %>% length()
data_raw_tbl %>%
select_if(is.numeric) %>%
map_df(~ unique(.) %>% length())
data_raw_tbl %>%
select_if(is.numeric) %>%
map(~ unique(.) %>% length())
data_raw_tbl %>%
select_if(is.numeric) %>%
map_df(~ unique(.) %>% length()) %>%
gather() %>%
arrange(value)
data_raw_tbl %>%
select_if(is.character())
data_raw_tbl %>%
select_if(is.character)
data_raw_tbl %>%
select_if(is.character) %>%
select(,contains("date"))
data_raw_tbl %>%
select_if(is.character) %>%
select(contains("date"))
names(data_raw_tbl)
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`)
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`)
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
glimpse()
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
skim()
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
skim()
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
map_df(~ unique(.) %>% length()) %>%
gather() %>%
arrange(value)
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
skim()
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
map_df(~ unique(.) %>% length()) %>%
gather() %>%
arrange(value)
# Unique value per important variables
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
map_df(~ unique(.) %>% length()) %>%
gather() %>%
arrange(value)
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
skim()
?skim
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
skim()
# Important Columns
data_raw_tbl %>%
select (`Charge Item Description`,
`Incident Cause`) %>%
skim()
covid19 <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
covid19 <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
raw_jhe_data <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
raw_jhe_data
raw_jhe_tbl <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
raw_covid19_tbl <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
covid19_tbl<- raw_covid19_tbl %>%
mutate(`Province/State` = ifelse(is.na(`Province/State`), `Country/Region`, `Province/State`)) %>%
gather(names(covid19)[5:ncol(covid19)], key = "date_time", value = "total_cases") %>%
filter(complete.cases(.)) %>%
mutate(date_time = mdy(date_time, tz = "America/Chicago"))
raw_covid19_tbl <- read_csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
library(tidyverse)
library(lubridate)
covid19_tbl<- raw_covid19_tbl %>%
mutate(`Province/State` = ifelse(is.na(`Province/State`), `Country/Region`, `Province/State`)) %>%
gather(names(covid19)[5:ncol(covid19)], key = "date_time", value = "total_cases") %>%
filter(complete.cases(.)) %>%
mutate(date_time = mdy(date_time, tz = "America/Chicago"))
covid19_tbl
covid19_tbl %>%
group_by(`Province/State`) %>%
mutate(new_cases = total_cases - lag(total_cases, default = first(total_cases), order_by = date_time))
raw_covid19_tbl
raw_covid19_tbl %>%
mutate(`Province/State` = ifelse(is.na(`Province/State`), `Country/Region`, `Province/State`))
covid19_newcases_tbl <- covid19_tbl %>%
group_by(`Province/State`) %>%
mutate(new_cases = total_cases - lag(total_cases, default = first(total_cases), order_by = date_time))
covid19_newcases_tbl
covid19_newcases_tbl %>%
group_by(`Country/Region`, date_time) %>%
summarise(total_country_cases = sum(total_cases)) %>%
mutate(new_cases = total_country_cases - lag(total_country_cases, default = first(total_country_cases),
order_by = date_time))
covid19_tbl<- raw_covid19_tbl %>%
mutate(`Province/State` = ifelse(is.na(`Province/State`), `Country/Region`, `Province/State`)) %>%
gather(names(covid19)[5:ncol(covid19)], key = "date_time", value = "total_cases") %>%
filter(complete.cases(.)) %>%
mutate(date_time = mdy(date_time, tz = "America/Chicago")) %>%
group_by(`Province/State`) %>%
mutate(new_cases = total_cases - lag(total_cases, default = first(total_cases), order_by = date_time))
covid19_country_tbl<- covid19_tbl %>%
group_by(`Country/Region`, date_time) %>%
summarise(total_country_cases = sum(total_cases)) %>%
mutate(new_cases = total_country_cases - lag(total_country_cases, default = first(total_country_cases),
order_by = date_time))
covid19_country_tbl
covid19_country_tbl<- covid19_tbl %>%
group_by(`Country/Region`, date_time) %>%
summarise(total_country_cases = sum(total_cases)) %>%
mutate(new_cases = total_country_cases - lag(total_country_cases, default = first(total_country_cases),
order_by = date_time))
covid19_country_tbl<- covid19_tbl %>%
group_by(`Country/Region`, date_time) %>%
summarise(total_country_cases = sum(total_cases)) %>%
mutate(new_cases = total_country_cases - lag(total_country_cases, default = first(total_country_cases),
order_by = date_time)) %>%
filter(total_country_cases>100) %>%
group_by(`Country/Region`) %>% mutate(days = row_number())
covid19_country_tbl
covid19_country_tbl<- covid19_tbl %>%
group_by(`Country/Region`, date_time) %>%
summarise(total_country_cases = sum(total_cases)) %>%
mutate(new_cases = total_country_cases - lag(total_country_cases, default = first(total_country_cases),
order_by = date_time)) %>%
filter(total_country_cases>100) %>%
group_by(`Country/Region`) %>% mutate(days_outbreak = row_number())
covid19_country_tbl
covid19_country_tbl
covid19_stats_tbl<-covid19_country_tbl %>%
group_by(days) %>%
summarise(mean=mean(total_country_cases ),
best=quantile(total_country_cases ,.25),
worst=quantile(total_country_cases ,.75))
covid19_country_tbl %>%
group_by(days_outbreak)
covid19_stats_tbl<-covid19_country_tbl %>%
group_by(days_outbreak) %>%
summarise(mean=mean(total_country_cases ),
best=quantile(total_country_cases ,.25),
worst=quantile(total_country_cases ,.75)
covid19_country_tbl %>%
group_by(days_outbreak) %>%
summarise(mean=mean(total_country_cases ),
best=quantile(total_country_cases ,.25),
worst=quantile(total_country_cases ,.75))
covid19_country_tbl %>%
group_by(days_outbreak) %>%
summarise(min=min(total_country_cases),
mean=mean(total_country_cases ),
best=quantile(total_country_cases ,.25),
worst=quantile(total_country_cases ,.75))
covid19_country_tbl %>%
group_by(days_outbreak) %>%
summarise(min=min(total_country_cases),
q25=quantile(total_country_cases ,.25),
median=median(total_country_cases ),
q75=quantile(total_country_cases ,.75),
max=max(total_country_cases))
country_stats_tbl
country_stats_tbl
country_stats_tbl<-covid19_country_tbl %>%
group_by(days_outbreak) %>%
summarise(min=min(total_country_cases),
q25=quantile(total_country_cases ,.25),
median=median(total_country_cases ),
q75=quantile(total_country_cases ,.75),
max=max(total_country_cases))
covid19_country_tbl<-left_join(covid19_country_tbl, country_stats_tbl,by="days") %>%
filter(`Country/Region`=="US")
covid19_country_tbl<-left_join(covid19_country_tbl, country_stats_tbl,by="days_outbreak") %>%
filter(`Country/Region`=="US")
covid19_country_tbl
covid19_country_tbl %>%
filter(`Country/Region`=="US")
covid19_us_tbl <- covid19_country_tbl %>%
filter(`Country/Region`=="US")
covid19_us_tbl
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=best, ymax=worst),fill = "grey70")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_point()+
geom_line()
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_ribbon(aes(ymin=q75, ymax=max),fill = "grey70")+
geom_ribbon(aes(ymin=min, ymax=q25),fill = "grey70")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_ribbon(aes(ymin=q75, ymax=max),fill = "red")+
geom_ribbon(aes(ymin=min, ymax=q25),fill = "green")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_ribbon(aes(ymin=q75, ymax=max),fill = "red")+
geom_ribbon(aes(ymin=min, ymax=q25),fill = "green")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_ribbon(aes(ymin=q75, ymax=max),fill = "red")+
geom_ribbon(aes(ymin=min, ymax=q25),fill = "green")+
geom_point()+
geom_line()
covid19_us_tbl %>%
ggplot(.,aes(x=days_outbreak,y=total_country_cases)) +
geom_ribbon(aes(ymin=q25, ymax=q75),fill = "grey70")+
geom_ribbon(aes(ymin=q75, ymax=max),fill = "red")+
geom_ribbon(aes(ymin=min, ymax=q25),fill = "green")+
geom_point()+
geom_line()+
scale_y_continuous(trans = 'log2')
install.packages("devtools")
install.packages("devtools")
devtools::install_github("munichrocker/DatawRappr")
library(DatawRappr)
datawrapper_auth(api_key =  "fe2854eca1ad089d8bfa37511af45e512395c3fc69a12f51ba3b87f5540c57ea	")
my_chart <- dw_create_chart()
dw_data_to_chart(covid19_us_tbl, my_chart)
dw_edit_chart(my_chart, title = "my new headline", intro = "a updated intro", source_url = "https://www.datawrapper.de")
dw_publish_chart(my_chart)
dw_edit_chart(my_chart, title = "US- Total New Cases", intro = "a updated intro", source_url = "https://www.datawrapper.de")
dw_publish_chart(my_chart)
?dw_data_to_chart()
dw_edit_chart?
?dw_edit_chart
dw_data_to_chart(covid19_us_tbl)
dw_data_to_chart(my_chart,covid19_us_tbl)
dw_edit_chart(my_chart, title = "US- Total New Cases", intro = "a updated intro", source_url = "https://www.datawrapper.de")
dw_edit_chart(my_chart, title = "US- Total New Cases!!", intro = "a updated intro", source_url = "https://www.datawrapper.de")
write.csv(covid19_us_tbl,'COVID-19_US_data.csv')
setwd("~/GTD/COVID-19_US-Dashboard/us_covid19_tracker")
write.csv(covid19_us_tbl,'COVID-19_US_data.csv')
